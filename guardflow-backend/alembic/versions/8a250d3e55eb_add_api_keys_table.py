"""add_api_keys_table

Revision ID: 8a250d3e55eb
Revises: 9057d304ae4e
Create Date: 2025-08-15 00:09:09.341232

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8a250d3e55eb'
down_revision = '9057d304ae4e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.Enum('LARGE_REQUEST', 'MULTIPLE_LARGE_REQUESTS', 'RAPID_USAGE', 'SUSPICIOUS_CONTENT', 'QUOTA_ABUSE', name='alerttype'), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('alert_metadata', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'REVIEWED', 'RESOLVED', 'FALSE_POSITIVE', name='alertstatus'), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_created_at'), 'alerts', ['created_at'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_status'), 'alerts', ['status'], unique=False)
    op.create_index(op.f('ix_alerts_user_id'), 'alerts', ['user_id'], unique=False)
    op.drop_constraint('llm_providers_tenant_id_provider_name_provider_instance_nam_key', 'llm_providers', type_='unique')
    op.create_unique_constraint('uq_tenant_provider_instance', 'llm_providers', ['tenant_id', 'provider_name', 'provider_instance_name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_tenant_provider_instance', 'llm_providers', type_='unique')
    op.create_unique_constraint('llm_providers_tenant_id_provider_name_provider_instance_nam_key', 'llm_providers', ['tenant_id', 'provider_name', 'provider_instance_name'])
    op.drop_index(op.f('ix_alerts_user_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_status'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_created_at'), table_name='alerts')
    op.drop_table('alerts')
    # ### end Alembic commands ###